<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://code.alibabatech.com/schema/dubbo
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
    <!--定义了提供方应用信息，用于计算依赖关系；在 dubbo-admin 或 dubbo-monitor 会显示这个名字，方便辨识-->
    <dubbo:application name="demo-provider" owner="demo_mirana" organization="dubbo_mirana"/>
    <!--使用 zookeeper 注册中心暴露服务，注意要先开启 zookeeper-->
    <!--    <dubbo:registry address="zookeeper://127.0.0.1:2181"/>-->
    <dubbo:registry protocol="zookeeper" address="127.0.0.1:2181,127.0.0.1:2182,127.0.0.1:2183"/>
    <!--dubbo协议在20880端口暴露服务 -->
    <dubbo:protocol name="dubbo" port="20880"/>


    <!--使用 dubbo 协议实现定义好的 Service Api 接口-->
    <dubbo:service interface="com.dubbo.api.service.CommentService" ref="commentService" protocol="dubbo" loadbalance="random"/>
    <dubbo:service interface="com.dubbo.api.service.Header1Service" ref="header1Service" protocol="dubbo" loadbalance="random"/>
    <dubbo:service interface="com.dubbo.api.service.LearnContentService" ref="learnContentService" protocol="dubbo" loadbalance="random"/>
    <dubbo:service interface="com.dubbo.api.service.SearchContentService" ref="searchContentService" protocol="dubbo" loadbalance="random"/>
    <dubbo:service interface="com.dubbo.api.service.SearchService" ref="searchService" protocol="dubbo" loadbalance="random"/>
    <dubbo:service interface="com.dubbo.api.service.UserKCService" ref="userKCService" protocol="dubbo" loadbalance="random"/>
    <dubbo:service interface="com.dubbo.api.service.UserRouterService" ref="userRouterService" protocol="dubbo" loadbalance="random"/>
    <dubbo:service interface="com.dubbo.api.service.UserService" ref="userService" protocol="dubbo" loadbalance="random"/>
    <dubbo:service interface="com.dubbo.api.service.WenDaService" ref="wenDaService" protocol="dubbo" loadbalance="random"/>

    <!--具体实现该接口的 bean-->
    <bean id="commentService" class="com.dubbo.provider.service.CommentServiceImpl"/>
    <bean id="header1Service" class="com.dubbo.provider.service.Header1ServiceImpl"/>
    <bean id="learnContentService" class="com.dubbo.provider.service.LearnContentServiceImpl"/>
    <bean id="searchContentService" class="com.dubbo.provider.service.SearchContentServiceImpl"/>
    <bean id="searchService" class="com.dubbo.provider.service.SearchServiceImpl"/>
    <bean id="userKCService" class="com.dubbo.provider.service.UserKCServiceImpl"/>
    <bean id="userRouterService" class="com.dubbo.provider.service.UserRouterServiceImpl"/>
    <bean id="userService" class="com.dubbo.provider.service.UserServiceImpl"/>
    <bean id="wenDaService" class="com.dubbo.provider.service.WenDaServiceImpl"/>

</beans>